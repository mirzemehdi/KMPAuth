name: Build
on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ "main" ]




concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup gradle
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1

      - name: Check api
        run: ./gradlew apiCheck


  build:
    strategy:
      matrix:
        config: [
          { target: android, os: ubuntu-latest, tasks: testDebugUnitTest testReleaseUnitTest, continueOnError: false },
          { target: apple, os: macos-latest, tasks: iosX64Test iosSimulatorArm64Test, continueOnError: false },
        ]
    runs-on: ${{ matrix.config.os }}
    name: Build ${{ matrix.config.target }}
    needs: check
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup gradle
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1

      - name: Test ${{ matrix.config.target }} targets
        continue-on-error: ${{ matrix.config.continueOnError }}
        run: ./gradlew ${{ matrix.config.tasks }}

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    needs:
      - build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup gradle
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Generate docs with dokka
        run: ./gradlew dokkaHtmlMultiModule

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ github.workspace }}/build/dokka/htmlMultiModule

      - name: Release to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

      - name: Write secrets to local.properties
        run: |
          echo sonatypeUsername="${SONATYPE_USERNAME}" >> "local.properties"
          echo sonatypePassword="${SONATYPE_PASSWORD}" >> "local.properties"
          echo gpgKeyPassword="${GPG_KEY_PASSWORD}" >> "local.properties"
          echo gpgKeySecret="${GPG_KEY_SECRET}" >> "local.properties"
        env:
          SONATYPE_USERNAME: mirzemehdi
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_KEY_PASSWORD: ${{ secrets.GPG_KEY_PASSWORD }}
          GPG_KEY_SECRET: ${{ secrets.GPG_KEY_SECRET }}


      - name: Publish to sonatype
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1
        with:
         arguments: |
          publishToSonatype
          closeAndReleaseSonatypeStagingRepository

      - name: Create new release from tag
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          token: ${{ env.github_token }}


